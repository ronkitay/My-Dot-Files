#!/bin/bash 

# Generated by Claude.ai

# Configuration
MAX_LOG_SIZE_MB=10
MAX_LOGS_PER_DAY=5
RETENTION_DAYS=7

# Ensure we have a base name for the log file
if [ $# -ne 2 ]; then
    echo "Usage: $0 <base-log-dir> <base-name>" >&2
    exit 1
fi

LOG_DIR="$1"
BASE_NAME="$2"
TODAY=$(date +%Y-%m-%d)

# Create log directory if it doesn't exist
mkdir -p "$LOG_DIR"

# Function to get current log file number
get_current_log_number() {
    local max_num=0
    for f in "$LOG_DIR/$BASE_NAME-$TODAY"--*.log; do
        if [ -f "$f" ]; then
            num=$(echo "$f" | grep -o '[0-9]*\.log$' | grep -o '[0-9]*')
            if [ "$num" -gt "$max_num" ]; then
                max_num=$num
            fi
        fi
    done
    if [ "$max_num" -eq 0 ]; then
        echo 1
    else
        echo "$max_num"
    fi
}

# Function to clean old logs
cleanup_old_logs() {
    find "$LOG_DIR" -name "$BASE_NAME-*.log" -type f -mtime +$RETENTION_DAYS -delete
}

# Function to check if log rotation is needed
need_rotation() {
    local log_file="$1"
    if [ ! -f "$log_file" ]; then
        return 1
    fi
    local size_kb=$(du -k "$log_file" | cut -f1)
    local size_mb=$((size_kb / 1024))
    if [ "$size_mb" -ge "$MAX_LOG_SIZE_MB" ]; then
        return 0
    fi
    return 1
}

# Get current log number and file
LOG_NUM=$(get_current_log_number)
LOG_FILE="$LOG_DIR/$BASE_NAME-$TODAY--$LOG_NUM.log"

# Main logging loop
while IFS= read -r line || [ -n "$line" ]; do
    # Check if we need to rotate
    if need_rotation "$LOG_FILE"; then
	LOG_NUM=$((LOG_NUM + 1))
        LOG_FILE="$LOG_DIR/$BASE_NAME-$TODAY--$LOG_NUM.log"
    fi
    
    # Write the line to the log file and stdout
    echo "$line" >> "$LOG_FILE"
done

# Clean up old logs after processing
cleanup_old_logs
