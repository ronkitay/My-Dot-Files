#!/bin/sh 

#########
# USE_SHARED_HISTORY - 'y' if state for this container's should be shared with all other containers that define it the same
# NO_STATE_WARNING - 'y' if the user does not wish to get notified that there are state/output for this container
# WORKSPACE_NAME - A pre-defined name for the workspace, used as the container name and as the base directory for output and state.
#########

function get_running_containers {
    echo $(docker ps | awk '{print $NF}' | grep "${WORKSPACE_NAME}" | wc -l)
}

function set_iterm_profile {
    if [[ -f "${HOME}/.iterm2/it2profile" ]]; then
        ${HOME}/.iterm2/it2profile -s "${1}" 
    fi
}

function attach_to_running_container {
    docker exec -it $(docker ps | grep "${1}" | awk '{print $1}') zsh
}

function launch_container {
    OUTPUT_DIR="${WORKSPACE_DIR}/.output/"

    mkdir -p ${WORKSPACE_DIR}

    OTHER_PARAMS=$(echo $* | sed "s|WORKSPACE_DIR|${WORKSPACE_DIR}|g")

    docker run \
        -e TERM -e COLORTERM -e LC_ALL=C.UTF-8 \
        --workdir /root/ \
        -v ${STATE_DIR}:/root/.state/ \
        -v ${HISTORY_DIR}:/root/.history/ \
        -v ${OUTPUT_DIR}:/root/.output/ \
        --env WORKSPACE_NAME=${WORKSPACE_NAME} \
        ${OTHER_PARAMS} ${CONTAINER_NAME} \
        -t -i --rm ${IMAGE} 
}

IMAGE=$1
shift

if [[ -z "${WORKSPACE_NAME}" ]];
then
    WORKSPACE_NAME=$(echo ${IMAGE} | tr ':' '_')-$(date +%s)-${RANDOM}-${RANDOM}
    WORKSPACE_DIR="${HOME}/.my-docker-envs/${WORKSPACE_NAME}"
else
    CONTAINER_NAME=" --name ${WORKSPACE_NAME} "
    WORKSPACE_DIR="${HOME}/.my-docker-envs/$(echo ${WORKSPACE_NAME} | tr 'A-Z ' 'a-z-')"
fi

set_iterm_profile "${WORKSPACE_NAME}" 

STATE_DIR="${WORKSPACE_DIR}/.state/"

if [[ -z "${USE_SHARED_HISTORY}" ]];
then
    HISTORY_DIR=${STATE_DIR}
else
    HISTORY_DIR="${HOME}/.my-docker-envs/.shared.state/"
fi

if [[ $(get_running_containers) -gt 0 ]];
then
    attach_to_running_container "${WORKSPACE_NAME}"
else  
    launch_container $*
fi

if [[ $(get_running_containers) -eq 0 ]];
then
    let state_files="$(find ${WORKSPACE_DIR} -type f | wc -l)"+0

    if [[ ${state_files} -eq 0 ]];
    then
        echo "Cleaning up workspace"
        rm -rf ${WORKSPACE_DIR}
    else
        if [[ -z "${NO_STATE_WARNING}" ]]; 
        then
            echo "Remember - you have ${state_files} files left under ${WORKSPACE_DIR}"
        fi
    fi
fi

set_iterm_profile "Default"
