alias s3='aws s3'

function s3cat() {
   aws s3 cp $1 -
}

function s3zcat() {
   aws s3 cp $1 - | zcat
}

function sqsstate() {
    QUEUE_URL=$1
    REGION=$(echo ${QUEUE_URL} | cut -d'.' -f2)
    QUEUE_DATA=$(aws sqs get-queue-attributes --region ${REGION} --queue-url ${QUEUE_URL} --output json --attribute-names All)
    ARN=$(echo $QUEUE_DATA | jq '.Attributes.QueueArn' | tr -d '"')
    QUEUE_SIZE=$(echo $QUEUE_DATA | jq -r '.Attributes.ApproximateNumberOfMessages')
    IN_PROCESS=$(echo $QUEUE_DATA | jq -r '.Attributes.ApproximateNumberOfMessagesNotVisible')

    printf "\n"
    COLUMN_SIZE=25
    printf "${BRIGHT}${GREEN}%-${COLUMN_SIZE}s\t${WHITE}%s\n" "ARN" "${ARN}"
    SOURCE_TOPIC=$(echo $QUEUE_DATA | jq '.Attributes.Policy | fromjson' 2> /dev/null | jq '.Statement[0].Condition.ArnEquals."aws:SourceArn"' | jq -r )
    if [[ $? -eq 0 && -n "${SOURCE_TOPIC}" ]]; then
        printf "${BRIGHT}${GREEN}%-${COLUMN_SIZE}s\t${WHITE}%s\n" "Source Topic" "${SOURCE_TOPIC}"
    fi

    printf "${BRIGHT}${GREEN}%-${COLUMN_SIZE}s\t${WHITE}%d\n" "Queue Size (Visible)" "${QUEUE_SIZE}"
    printf "${BRIGHT}${GREEN}%-${COLUMN_SIZE}s\t${WHITE}%d\n" "In Process (Not Visible)" "${IN_PROCESS}"

    

    printf "\n"
}