# Jar Inspection Commands
#A# look4j;Looks for classes in JAR files
function look4j() { JAR_COMMAND="jar"; jar > /dev/null 2>&1 ; [[ $? == 127 ]] && { [[ -z ${JAVA_HOME} ]] && printf "$(tput bold)$(tput setaf 1)The 'jar' command is not in the PATH and JAVA_HOME is not configured - aborting$(tput sgr0)\n" && return 2; JAR_COMMAND=${JAVA_HOME}/bin/jar; }; [[ $# == 0 ]] || [[ $# > 2 ]] && printf "$(tput bold)$(tput setaf 1)Usage:$(tput sgr0) $(tput bold) look4j [<dir>] <pattern>$(tput sgr0)\n$(tput bold)$(tput setaf 2)Examples:$(tput sgr0)\n\t$(tput bold)look4j Exception$(tput sgr0)\n\t$(tput bold)look4j \$JAVA_HOME/lib com/sun/.*action$(tput sgr0)\n" && return 1; [[ $# == 2 ]] && { DIR=$1 ; CLASS=$2; }; [[ $# == 1 ]] && { DIR="." ; CLASS=$1; }; for jar in `find $DIR -name "*.jar"`; do printf "."; res=$(unset JAVA_TOOL_OPTIONS; ${JAR_COMMAND} tvf $jar | grep "$CLASS" | sed 's/$/;/'); let outputsize="$(echo $res|wc -c)"; [[ $outputsize > 1 ]] && { printf "\nMatch found in [$jar]\n"; printf "$res\n" | tr ';' '\n' | grep --color "$CLASS"; } done;}

#A# cdmod;Goes to the root of the current module (Where a pom.xml or build.gradle can be found)
alias cdmod='while [[ ! -f pom.xml && ! -f build.gradle && $(pwd) != "/" ]] ; do cd ..; done'
