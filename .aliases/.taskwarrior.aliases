alias ta='task active'
alias trd='task ready'
alias trdp='task ready +Personal'
alias trdf='task ready +Focus'
alias tcompleted='task completed'
alias tcontext='task context'
alias twaiting='task waiting'

function _tsnooze_validate() {
    if [ $# -ne 2 ]; then
        echo "Expecting exactly 1 argument";
        printf "Usage:\n"
        printf "\t%s <task-id>\n" "$1"
        printf "\nExample:\n"
        printf "\t%s '73'\n" "$1"
        return 1;
    fi
    return 0;
}

function tsnooze1hour() {
    _tsnooze_validate tsnooze1hour $* && task $1 modify wait:+1h
}

function tsnoozetommorow() {
    _tsnooze_validate tsnoozetommorow $* && task $1 modify wait:tomorrow+8h
}

function rladd() {
    if [ $# -ne 3 ]; then
        echo "Expecting exactly 3 arguments";
        printf "Usage:\n"
        printf "\t%s <item-name> <item-url> <item-source>\n" "rladd"
        printf "\nExample:\n"
        printf "\t%s 'How do monkeys procreate' 'https://www.monkey-love.com/how' 'Monkey business podcast'\n" "rladd"
        return;
    fi
    ITEM_NAME=$1;
    ITEM_URL=$2;
    ITEM_SOURCE=$3;

    task add project:Read-List priority:L description:"${ITEM_NAME}";
    TASK_ID=$(task +LATEST uuids);
    task ${TASK_ID} annotate "URL: ${ITEM_URL}";
    task ${TASK_ID} annotate "Source: ${ITEM_SOURCE}";

    task ${TASK_ID}
}

function rlshow() {
    echo "Active"
    task project:Read-List
    echo "Waiting"
    task waiting project:Read-List
}
