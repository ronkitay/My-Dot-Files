alias tcontext='task context'

alias tactive='task active'
alias tcompleted='task completed'
alias tpending='task all -COMPLETED -DELETED'
alias twaiting='task waiting'

alias 1='tput clear && echo "" && task active -BLOCKED'
alias 11='1 limit=1'
alias 12='1 limit=2'
alias 13='1 limit=3'
alias 14='1 limit=4'
alias 15='1 limit=5'

alias 2='tput clear && echo "" && task ready -ACTIVE'
alias 21='2 limit=1'
alias 22='2 limit=2'
alias 23='2 limit=3'
alias 24='2 limit=4'
alias 25='2 limit=5'

alias 3='tput clear && echo "" && task waiting -ACTIVE project.not:Read-List'
alias 31='3 limit=1'
alias 32='3 limit=2'
alias 33='3 limit=3'
alias 34='3 limit=4'
alias 35='3 limit=5'

alias 4='tput clear && echo "" && rlshow'

function _tsnooze_validate() {
    if [ $# -ne 2 ]; then
        echo "Expecting exactly 1 argument";
        printf "Usage:\n"
        printf "\t%s <task-id>\n" "$1"
        printf "\nExample:\n"
        printf "\t%s '73'\n" "$1"
        return 1;
    fi
    return 0;
}

function t1hour() {
    _tsnooze_validate t1hour $* && task $1 modify wait:+1h
}

function ttonight() {
    _tsnooze_validate ttonight $* && task $1 modify wait:today+19h
}

function ttomorow() {
    _tsnooze_validate ttomorow $* && task $1 modify wait:tomorrow+8h
}

function tweekend() {
    _tsnooze_validate tweekend $* && task $1 modify wait:friday+8h
}

function tnextweek() {
    _tsnooze_validate tnextweek $* && task $1 modify wait:sun+8h
}

function tresume() {
    _tsnooze_validate tresume $* && task $1 start && task $1 modify wait:
}

function rladd() {
    if [ $# -ne 4 ]; then
        echo "Expecting exactly 3 arguments";
        printf "Usage:\n"
        printf "\t%s <item-name> <item-url> <item-source> <estimated-reading-time-in-minutes>\n" "rladd"
        printf "\nExample:\n"
        printf "\t%s 'How do monkeys procreate' 'https://www.monkey-love.com/how' 'Monkey business podcast' '30'\n" "rladd"
        return;
    fi
    ITEM_NAME=$1;
    ITEM_URL=$2;
    ITEM_SOURCE=$3;
    ITEM_READING_TIME=$4;

    task add project:Read-List priority:L description:"${ITEM_NAME}";
    TASK_ID=$(task +LATEST uuids);
    task ${TASK_ID} annotate "URL: ${ITEM_URL}";
    task ${TASK_ID} annotate "Source: ${ITEM_SOURCE}";
    task ${TASK_ID} annotate "[Reading Time: ${ITEM_READING_TIME} min]";

    task ${TASK_ID}
}

function rlshow() {
    echo "Active"
    task project:Read-List $*
    echo "Waiting"
    task waiting project:Read-List $*
}
