#DOC# Taskwarrior;3;Show Ready Tasks
#DOC# Taskwarrior;4;Show Active Tasks
#DOC# Taskwarrior;5;Show Read List

#DOC# Taskwarrior;t1hour;Snooze task for 1 hour
#DOC# Taskwarrior;ttonight;Snooze task until tonight at 19:00
#DOC# Taskwarrior;ttomorrow;Snooze task until tomorrow at 8:00
#DOC# Taskwarrior;tweekend;Snooze task until Friday at 8:00

alias ta='task active'
alias trd='task ready'
alias trdp='task ready +Personal'
alias trdf='task ready +Focus'
alias tcompleted='task completed'
alias tcontext='task context'
alias twaiting='task waiting'

alias 3='clear && task ready'
alias 4='clear && task active -BLOCKED'
alias 5='clear && rlshow'

function _tsnooze_validate() {
    if [ $# -ne 2 ]; then
        echo "Expecting exactly 1 argument";
        printf "Usage:\n"
        printf "\t%s <task-id>\n" "$1"
        printf "\nExample:\n"
        printf "\t%s '73'\n" "$1"
        return 1;
    fi
    return 0;
}

function t1hour() {
    _tsnooze_validate t1hour $* && task $1 modify wait:+1h
}

function ttonight() {
    _tsnooze_validate ttonight $* && task $1 modify wait:today+19h
}

function ttomorow() {
    _tsnooze_validate ttomorow $* && task $1 modify wait:tomorrow+8h
}

function tweekend() {
    _tsnooze_validate tweekend $* && task $1 modify wait:friday+8h
}

function tresume() {
    _tsnooze_validate tresume $* && task $1 start && task $1 modify wait:
}

function rladd() {
    if [ $# -ne 3 ]; then
        echo "Expecting exactly 3 arguments";
        printf "Usage:\n"
        printf "\t%s <item-name> <item-url> <item-source>\n" "rladd"
        printf "\nExample:\n"
        printf "\t%s 'How do monkeys procreate' 'https://www.monkey-love.com/how' 'Monkey business podcast'\n" "rladd"
        return;
    fi
    ITEM_NAME=$1;
    ITEM_URL=$2;
    ITEM_SOURCE=$3;

    task add project:Read-List priority:L description:"${ITEM_NAME}";
    TASK_ID=$(task +LATEST uuids);
    task ${TASK_ID} annotate "URL: ${ITEM_URL}";
    task ${TASK_ID} annotate "Source: ${ITEM_SOURCE}";

    task ${TASK_ID}
}

function rlshow() {
    echo "Active"
    task project:Read-List
    echo "Waiting"
    task waiting project:Read-List
}
